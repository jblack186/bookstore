{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n\n  return str.split(/\\s+/).filter(s => s.length > 0);\n}\n\nfunction isSubset(subset, superset) {\n  return subset.every(item => superset.includes(item));\n}\n\nfunction toHaveClass(htmlElement, ...expectedClassNames) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  const received = splitClassNames(htmlElement.getAttribute('class'));\n  const expected = expectedClassNames.reduce((acc, className) => acc.concat(splitClassNames(className)), []);\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toHaveClass`, 'element', (0, _jestMatcherUtils.printExpected)(expected.join(' '))), `Expected the element ${to} have class`, expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: () => this.isNot ? (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [(0, _jestMatcherUtils.matcherHint)(`.toHaveClass`, 'element'), 'At least one expected class must be provided.'].join('\\n')\n  };\n}","map":{"version":3,"sources":["/Users/jamie/Documents/bookstore/store/node_modules/@testing-library/jest-dom/dist/to-have-class.js"],"names":["Object","defineProperty","exports","value","toHaveClass","_jestMatcherUtils","require","_utils","splitClassNames","str","split","filter","s","length","isSubset","subset","superset","every","item","includes","htmlElement","expectedClassNames","checkHtmlElement","received","getAttribute","expected","reduce","acc","className","concat","pass","message","to","isNot","getMessage","matcherHint","printExpected","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASE,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAI,CAACA,GAAL,EAAU;AACR,WAAO,EAAP;AACD;;AAED,SAAOA,GAAG,CAACC,KAAJ,CAAU,KAAV,EAAiBC,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAW,CAAxC,CAAP;AACD;;AAED,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AAClC,SAAOD,MAAM,CAACE,KAAP,CAAaC,IAAI,IAAIF,QAAQ,CAACG,QAAT,CAAkBD,IAAlB,CAArB,CAAP;AACD;;AAED,SAASd,WAAT,CAAqBgB,WAArB,EAAkC,GAAGC,kBAArC,EAAyD;AACvD,GAAC,GAAGd,MAAM,CAACe,gBAAX,EAA6BF,WAA7B,EAA0ChB,WAA1C,EAAuD,IAAvD;AACA,QAAMmB,QAAQ,GAAGf,eAAe,CAACY,WAAW,CAACI,YAAZ,CAAyB,OAAzB,CAAD,CAAhC;AACA,QAAMC,QAAQ,GAAGJ,kBAAkB,CAACK,MAAnB,CAA0B,CAACC,GAAD,EAAMC,SAAN,KAAoBD,GAAG,CAACE,MAAJ,CAAWrB,eAAe,CAACoB,SAAD,CAA1B,CAA9C,EAAsF,EAAtF,CAAjB;AACA,SAAOH,QAAQ,CAACZ,MAAT,GAAkB,CAAlB,GAAsB;AAC3BiB,IAAAA,IAAI,EAAEhB,QAAQ,CAACW,QAAD,EAAWF,QAAX,CADa;AAE3BQ,IAAAA,OAAO,EAAE,MAAM;AACb,YAAMC,EAAE,GAAG,KAAKC,KAAL,GAAa,QAAb,GAAwB,IAAnC;AACA,aAAO,CAAC,GAAG1B,MAAM,CAAC2B,UAAX,EAAuB,CAAC,GAAG7B,iBAAiB,CAAC8B,WAAtB,EAAoC,GAAE,KAAKF,KAAL,GAAa,MAAb,GAAsB,EAAG,cAA/D,EAA8E,SAA9E,EAAyF,CAAC,GAAG5B,iBAAiB,CAAC+B,aAAtB,EAAqCX,QAAQ,CAACY,IAAT,CAAc,GAAd,CAArC,CAAzF,CAAvB,EAA4K,wBAAuBL,EAAG,aAAtM,EAAoNP,QAAQ,CAACY,IAAT,CAAc,GAAd,CAApN,EAAwO,UAAxO,EAAoPd,QAAQ,CAACc,IAAT,CAAc,GAAd,CAApP,CAAP;AACD;AAL0B,GAAtB,GAMH;AACFP,IAAAA,IAAI,EAAE,KAAKG,KAAL,GAAaV,QAAQ,CAACV,MAAT,GAAkB,CAA/B,GAAmC,KADvC;AAEFkB,IAAAA,OAAO,EAAE,MAAM,KAAKE,KAAL,GAAa,CAAC,GAAG1B,MAAM,CAAC2B,UAAX,EAAuB,CAAC,GAAG7B,iBAAiB,CAAC8B,WAAtB,EAAmC,kBAAnC,EAAuD,SAAvD,EAAkE,EAAlE,CAAvB,EAA8F,sCAA9F,EAAsI,QAAtI,EAAgJ,UAAhJ,EAA4JZ,QAAQ,CAACc,IAAT,CAAc,GAAd,CAA5J,CAAb,GAA+L,CAAC,CAAC,GAAGhC,iBAAiB,CAAC8B,WAAtB,EAAoC,cAApC,EAAmD,SAAnD,CAAD,EAAgE,+CAAhE,EAAiHE,IAAjH,CAAsH,IAAtH;AAF5M,GANJ;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n\n  return str.split(/\\s+/).filter(s => s.length > 0);\n}\n\nfunction isSubset(subset, superset) {\n  return subset.every(item => superset.includes(item));\n}\n\nfunction toHaveClass(htmlElement, ...expectedClassNames) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  const received = splitClassNames(htmlElement.getAttribute('class'));\n  const expected = expectedClassNames.reduce((acc, className) => acc.concat(splitClassNames(className)), []);\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toHaveClass`, 'element', (0, _jestMatcherUtils.printExpected)(expected.join(' '))), `Expected the element ${to} have class`, expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: () => this.isNot ? (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [(0, _jestMatcherUtils.matcherHint)(`.toHaveClass`, 'element'), 'At least one expected class must be provided.'].join('\\n')\n  };\n}"]},"metadata":{},"sourceType":"script"}