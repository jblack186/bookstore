{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeRequired = toBeRequired;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\"); // form elements that support 'required'\n\n\nconst FORM_TAGS = ['select', 'textarea'];\nconst ARIA_FORM_TAGS = ['input', 'select', 'textarea'];\nconst UNSUPPORTED_INPUT_TYPES = ['color', 'hidden', 'range', 'submit', 'image', 'reset'];\nconst SUPPORTED_ARIA_ROLES = ['combobox', 'gridcell', 'radiogroup', 'spinbutton', 'tree'];\n\nfunction isRequiredOnFormTagsExceptInput(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element)) && element.hasAttribute('required');\n}\n\nfunction isRequiredOnSupportedInput(element) {\n  return (0, _utils.getTag)(element) === 'input' && element.hasAttribute('required') && (element.hasAttribute('type') && !UNSUPPORTED_INPUT_TYPES.includes(element.getAttribute('type')) || !element.hasAttribute('type'));\n}\n\nfunction isElementRequiredByARIA(element) {\n  return element.hasAttribute('aria-required') && element.getAttribute('aria-required') === 'true' && (ARIA_FORM_TAGS.includes((0, _utils.getTag)(element)) || element.hasAttribute('role') && SUPPORTED_ARIA_ROLES.includes(element.getAttribute('role')));\n}\n\nfunction toBeRequired(element) {\n  (0, _utils.checkHtmlElement)(element, toBeRequired, this);\n  const isRequired = isRequiredOnFormTagsExceptInput(element) || isRequiredOnSupportedInput(element) || isElementRequiredByARIA(element);\n  return {\n    pass: isRequired,\n    message: () => {\n      const is = isRequired ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeRequired`, 'element', ''), '', `Received element ${is} required:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jamie/Documents/bookstore/store/node_modules/@testing-library/jest-dom/dist/to-be-required.js"],"names":["Object","defineProperty","exports","value","toBeRequired","_jestMatcherUtils","require","_utils","FORM_TAGS","ARIA_FORM_TAGS","UNSUPPORTED_INPUT_TYPES","SUPPORTED_ARIA_ROLES","isRequiredOnFormTagsExceptInput","element","includes","getTag","hasAttribute","isRequiredOnSupportedInput","getAttribute","isElementRequiredByARIA","checkHtmlElement","isRequired","pass","message","is","matcherHint","isNot","printReceived","cloneNode","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB,C,CAEA;;;AACA,MAAME,SAAS,GAAG,CAAC,QAAD,EAAW,UAAX,CAAlB;AACA,MAAMC,cAAc,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAAvB;AACA,MAAMC,uBAAuB,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,EAAuC,OAAvC,EAAgD,OAAhD,CAAhC;AACA,MAAMC,oBAAoB,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,YAAvC,EAAqD,MAArD,CAA7B;;AAEA,SAASC,+BAAT,CAAyCC,OAAzC,EAAkD;AAChD,SAAOL,SAAS,CAACM,QAAV,CAAmB,CAAC,GAAGP,MAAM,CAACQ,MAAX,EAAmBF,OAAnB,CAAnB,KAAmDA,OAAO,CAACG,YAAR,CAAqB,UAArB,CAA1D;AACD;;AAED,SAASC,0BAAT,CAAoCJ,OAApC,EAA6C;AAC3C,SAAO,CAAC,GAAGN,MAAM,CAACQ,MAAX,EAAmBF,OAAnB,MAAgC,OAAhC,IAA2CA,OAAO,CAACG,YAAR,CAAqB,UAArB,CAA3C,KAAgFH,OAAO,CAACG,YAAR,CAAqB,MAArB,KAAgC,CAACN,uBAAuB,CAACI,QAAxB,CAAiCD,OAAO,CAACK,YAAR,CAAqB,MAArB,CAAjC,CAAjC,IAAmG,CAACL,OAAO,CAACG,YAAR,CAAqB,MAArB,CAApL,CAAP;AACD;;AAED,SAASG,uBAAT,CAAiCN,OAAjC,EAA0C;AACxC,SAAOA,OAAO,CAACG,YAAR,CAAqB,eAArB,KAAyCH,OAAO,CAACK,YAAR,CAAqB,eAArB,MAA0C,MAAnF,KAA8FT,cAAc,CAACK,QAAf,CAAwB,CAAC,GAAGP,MAAM,CAACQ,MAAX,EAAmBF,OAAnB,CAAxB,KAAwDA,OAAO,CAACG,YAAR,CAAqB,MAArB,KAAgCL,oBAAoB,CAACG,QAArB,CAA8BD,OAAO,CAACK,YAAR,CAAqB,MAArB,CAA9B,CAAtL,CAAP;AACD;;AAED,SAASd,YAAT,CAAsBS,OAAtB,EAA+B;AAC7B,GAAC,GAAGN,MAAM,CAACa,gBAAX,EAA6BP,OAA7B,EAAsCT,YAAtC,EAAoD,IAApD;AACA,QAAMiB,UAAU,GAAGT,+BAA+B,CAACC,OAAD,CAA/B,IAA4CI,0BAA0B,CAACJ,OAAD,CAAtE,IAAmFM,uBAAuB,CAACN,OAAD,CAA7H;AACA,SAAO;AACLS,IAAAA,IAAI,EAAED,UADD;AAELE,IAAAA,OAAO,EAAE,MAAM;AACb,YAAMC,EAAE,GAAGH,UAAU,GAAG,IAAH,GAAU,QAA/B;AACA,aAAO,CAAC,CAAC,GAAGhB,iBAAiB,CAACoB,WAAtB,EAAoC,GAAE,KAAKC,KAAL,GAAa,MAAb,GAAsB,EAAG,eAA/D,EAA+E,SAA/E,EAA0F,EAA1F,CAAD,EAAgG,EAAhG,EAAqG,oBAAmBF,EAAG,YAA3H,EAAyI,KAAI,CAAC,GAAGnB,iBAAiB,CAACsB,aAAtB,EAAqCd,OAAO,CAACe,SAAR,CAAkB,KAAlB,CAArC,CAA+D,EAA5M,EAA+MC,IAA/M,CAAoN,IAApN,CAAP;AACD;AALI,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeRequired = toBeRequired;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\n// form elements that support 'required'\nconst FORM_TAGS = ['select', 'textarea'];\nconst ARIA_FORM_TAGS = ['input', 'select', 'textarea'];\nconst UNSUPPORTED_INPUT_TYPES = ['color', 'hidden', 'range', 'submit', 'image', 'reset'];\nconst SUPPORTED_ARIA_ROLES = ['combobox', 'gridcell', 'radiogroup', 'spinbutton', 'tree'];\n\nfunction isRequiredOnFormTagsExceptInput(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element)) && element.hasAttribute('required');\n}\n\nfunction isRequiredOnSupportedInput(element) {\n  return (0, _utils.getTag)(element) === 'input' && element.hasAttribute('required') && (element.hasAttribute('type') && !UNSUPPORTED_INPUT_TYPES.includes(element.getAttribute('type')) || !element.hasAttribute('type'));\n}\n\nfunction isElementRequiredByARIA(element) {\n  return element.hasAttribute('aria-required') && element.getAttribute('aria-required') === 'true' && (ARIA_FORM_TAGS.includes((0, _utils.getTag)(element)) || element.hasAttribute('role') && SUPPORTED_ARIA_ROLES.includes(element.getAttribute('role')));\n}\n\nfunction toBeRequired(element) {\n  (0, _utils.checkHtmlElement)(element, toBeRequired, this);\n  const isRequired = isRequiredOnFormTagsExceptInput(element) || isRequiredOnSupportedInput(element) || isElementRequiredByARIA(element);\n  return {\n    pass: isRequired,\n    message: () => {\n      const is = isRequired ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeRequired`, 'element', ''), '', `Received element ${is} required:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}