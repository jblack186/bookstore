{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeDisabled = toBeDisabled;\nexports.toBeEnabled = toBeEnabled;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\"); // form elements that support 'disabled'\n\n\nconst FORM_TAGS = ['fieldset', 'input', 'select', 'optgroup', 'option', 'button', 'textarea'];\n/*\n * According to specification:\n * If <fieldset> is disabled, the form controls that are its descendants,\n * except descendants of its first optional <legend> element, are disabled\n *\n * https://html.spec.whatwg.org/multipage/form-elements.html#concept-fieldset-disabled\n *\n * This method tests whether element is first legend child of fieldset parent\n */\n\nfunction isFirstLegendChildOfFieldset(element, parent) {\n  return (0, _utils.getTag)(element) === 'legend' && (0, _utils.getTag)(parent) === 'fieldset' && element.isSameNode(Array.from(parent.children).find(child => (0, _utils.getTag)(child) === 'legend'));\n}\n\nfunction isElementDisabledByParent(element, parent) {\n  return isElementDisabled(parent) && !isFirstLegendChildOfFieldset(element, parent);\n}\n\nfunction isElementDisabled(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element)) && element.hasAttribute('disabled');\n}\n\nfunction isAncestorDisabled(element) {\n  const parent = element.parentElement;\n  return Boolean(parent) && (isElementDisabledByParent(element, parent) || isAncestorDisabled(parent));\n}\n\nfunction toBeDisabled(element) {\n  (0, _utils.checkHtmlElement)(element, toBeDisabled, this);\n  const isDisabled = isElementDisabled(element) || isAncestorDisabled(element);\n  return {\n    pass: isDisabled,\n    message: () => {\n      const is = isDisabled ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeDisabled`, 'element', ''), '', `Received element ${is} disabled:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}\n\nfunction toBeEnabled(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEnabled, this);\n  const isEnabled = !(isElementDisabled(element) || isAncestorDisabled(element));\n  return {\n    pass: isEnabled,\n    message: () => {\n      const is = isEnabled ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeEnabled`, 'element', ''), '', `Received element ${is} enabled:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jamie/Documents/bookstore/store/node_modules/@testing-library/jest-dom/dist/to-be-disabled.js"],"names":["Object","defineProperty","exports","value","toBeDisabled","toBeEnabled","_jestMatcherUtils","require","_utils","FORM_TAGS","isFirstLegendChildOfFieldset","element","parent","getTag","isSameNode","Array","from","children","find","child","isElementDisabledByParent","isElementDisabled","includes","hasAttribute","isAncestorDisabled","parentElement","Boolean","checkHtmlElement","isDisabled","pass","message","is","matcherHint","isNot","printReceived","cloneNode","join","isEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeDisabled = toBeDisabled;\nexports.toBeEnabled = toBeEnabled;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\n// form elements that support 'disabled'\nconst FORM_TAGS = ['fieldset', 'input', 'select', 'optgroup', 'option', 'button', 'textarea'];\n/*\n * According to specification:\n * If <fieldset> is disabled, the form controls that are its descendants,\n * except descendants of its first optional <legend> element, are disabled\n *\n * https://html.spec.whatwg.org/multipage/form-elements.html#concept-fieldset-disabled\n *\n * This method tests whether element is first legend child of fieldset parent\n */\n\nfunction isFirstLegendChildOfFieldset(element, parent) {\n  return (0, _utils.getTag)(element) === 'legend' && (0, _utils.getTag)(parent) === 'fieldset' && element.isSameNode(Array.from(parent.children).find(child => (0, _utils.getTag)(child) === 'legend'));\n}\n\nfunction isElementDisabledByParent(element, parent) {\n  return isElementDisabled(parent) && !isFirstLegendChildOfFieldset(element, parent);\n}\n\nfunction isElementDisabled(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element)) && element.hasAttribute('disabled');\n}\n\nfunction isAncestorDisabled(element) {\n  const parent = element.parentElement;\n  return Boolean(parent) && (isElementDisabledByParent(element, parent) || isAncestorDisabled(parent));\n}\n\nfunction toBeDisabled(element) {\n  (0, _utils.checkHtmlElement)(element, toBeDisabled, this);\n  const isDisabled = isElementDisabled(element) || isAncestorDisabled(element);\n  return {\n    pass: isDisabled,\n    message: () => {\n      const is = isDisabled ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeDisabled`, 'element', ''), '', `Received element ${is} disabled:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}\n\nfunction toBeEnabled(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEnabled, this);\n  const isEnabled = !(isElementDisabled(element) || isAncestorDisabled(element));\n  return {\n    pass: isEnabled,\n    message: () => {\n      const is = isEnabled ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeEnabled`, 'element', ''), '', `Received element ${is} enabled:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}