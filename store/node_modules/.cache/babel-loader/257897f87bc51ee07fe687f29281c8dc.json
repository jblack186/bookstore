{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toContainElement = toContainElement;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction toContainElement(container, element) {\n  (0, _utils.checkHtmlElement)(container, toContainElement, this);\n\n  if (element !== null) {\n    (0, _utils.checkHtmlElement)(element, toContainElement, this);\n  }\n\n  return {\n    pass: container.contains(element),\n    message: () => {\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toContainElement`, 'element', 'element'), '', (0, _jestMatcherUtils.RECEIVED_COLOR)(`${(0, _jestMatcherUtils.stringify)(container.cloneNode(false))} ${this.isNot ? 'contains:' : 'does not contain:'} ${(0, _jestMatcherUtils.stringify)(element ? element.cloneNode(false) : element)}\n        `)].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jamie/Documents/bookstore/store/node_modules/@testing-library/jest-dom/dist/to-contain-element.js"],"names":["Object","defineProperty","exports","value","toContainElement","_jestMatcherUtils","require","_utils","container","element","checkHtmlElement","pass","contains","message","matcherHint","isNot","RECEIVED_COLOR","stringify","cloneNode","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,gBAAT,CAA0BI,SAA1B,EAAqCC,OAArC,EAA8C;AAC5C,GAAC,GAAGF,MAAM,CAACG,gBAAX,EAA6BF,SAA7B,EAAwCJ,gBAAxC,EAA0D,IAA1D;;AAEA,MAAIK,OAAO,KAAK,IAAhB,EAAsB;AACpB,KAAC,GAAGF,MAAM,CAACG,gBAAX,EAA6BD,OAA7B,EAAsCL,gBAAtC,EAAwD,IAAxD;AACD;;AAED,SAAO;AACLO,IAAAA,IAAI,EAAEH,SAAS,CAACI,QAAV,CAAmBH,OAAnB,CADD;AAELI,IAAAA,OAAO,EAAE,MAAM;AACb,aAAO,CAAC,CAAC,GAAGR,iBAAiB,CAACS,WAAtB,EAAoC,GAAE,KAAKC,KAAL,GAAa,MAAb,GAAsB,EAAG,mBAA/D,EAAmF,SAAnF,EAA8F,SAA9F,CAAD,EAA2G,EAA3G,EAA+G,CAAC,GAAGV,iBAAiB,CAACW,cAAtB,EAAuC,GAAE,CAAC,GAAGX,iBAAiB,CAACY,SAAtB,EAAiCT,SAAS,CAACU,SAAV,CAAoB,KAApB,CAAjC,CAA6D,IAAG,KAAKH,KAAL,GAAa,WAAb,GAA2B,mBAAoB,IAAG,CAAC,GAAGV,iBAAiB,CAACY,SAAtB,EAAiCR,OAAO,GAAGA,OAAO,CAACS,SAAR,CAAkB,KAAlB,CAAH,GAA8BT,OAAtE,CAA+E;AACtW,SAD4H,CAA/G,EACDU,IADC,CACI,IADJ,CAAP;AAED;AALI,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toContainElement = toContainElement;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction toContainElement(container, element) {\n  (0, _utils.checkHtmlElement)(container, toContainElement, this);\n\n  if (element !== null) {\n    (0, _utils.checkHtmlElement)(element, toContainElement, this);\n  }\n\n  return {\n    pass: container.contains(element),\n    message: () => {\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toContainElement`, 'element', 'element'), '', (0, _jestMatcherUtils.RECEIVED_COLOR)(`${(0, _jestMatcherUtils.stringify)(container.cloneNode(false))} ${this.isNot ? 'contains:' : 'does not contain:'} ${(0, _jestMatcherUtils.stringify)(element ? element.cloneNode(false) : element)}\n        `)].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}